plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'androidx.navigation.safeargs.kotlin'
}
def getSecretKeys(){
    def keyFile = file("pokedexapp.properties")
    def secretKeys = new Properties()
    secretKeys.load(new FileInputStream(keyFile))
    return secretKeys
}
android {
    compileSdk 32

    defaultConfig {
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString(),
                              "room.incremental":"true",
                              "room.expandProjection":"true"]
            }
        }
        
        applicationId "com.juacodev.pokedexapp"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            buildConfigField "String", "BASE_URL", getSecretKeys().getProperty("BASE_URL")
            buildConfigField "String", "IMAGE_PATH", getSecretKeys().getProperty("BASE_URL_IMAGES")
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            applicationIdSuffix ".debug"
            debuggable true
            buildConfigField "String", "BASE_URL", getSecretKeys().getProperty("BASE_URL")
            buildConfigField "String", "IMAGE_PATH", getSecretKeys().getProperty("BASE_URL_IMAGES")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        viewBinding true
    }


}
dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    //android
    // Fragment
    implementation "androidx.fragment:fragment-ktx:1.5.2"
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    // Activity
    implementation "androidx.activity:activity-ktx:1.5.1"
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.5.1"
    //navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.5.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.5.2'
    //daggerhilt
    implementation "com.google.dagger:hilt-android:2.44"
    kapt "com.google.dagger:hilt-compiler:2.44"
    //Corrutinas
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.1'
    //Room Library
    //implementation "androidx.room:room-runtime:2.2.6"
    implementation "androidx.room:room-ktx:2.4.3"
    kapt "androidx.room:room-compiler:2.4.3"
    kapt "android.arch.persistence.room:compiler:1.1.1"

    //third party
    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"
    // OkHttp
    implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

    implementation 'androidx.test.ext:junit-ktx:1.1.3'
    //Glide
    implementation 'com.github.bumptech.glide:glide:4.12.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.12.0'
}
// Allow references to generated code
kapt {
    correctErrorTypes true
}